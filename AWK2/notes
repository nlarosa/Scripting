1.a. 
	sed:	sed -n '/Nick.*\"/p' test

	grep:	grep 'Nick.*\"' test

	awk:	awk '/Nick.*\"/{print}' test

1.b. 
	sed:	sed -n '/\(\([0-9]\|[0-9]\{2\}\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-5]\)\.\)\{3\}\([0-9]\|[0-9]\{2\}\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-5]\)/p' messages

	grep:	egrep '(([0-9]|[0-9]{2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9]{2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])' messages

	awk:	awk -v d="([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])" '{if($0 ~ d"\\."d"\\."d"\\."d) print}' messages

2.a.
	sed -e '/printf/ {n}' -e 's/pow/powVariable/g' -e 's/sqrt/sqrtVariable/' main.c
	
2.b.
	sed -e '/Object Oriented Programming/ { s/Object Oriented Programming/Object Oriented Programming \(OOP\)/ : loop s/Object Oriented Programming/OOP/ b loop }' TechReport.txt

3.a.
	grep -n 'gnarly$' /afs/nd.edu/coursesp.13/cse/cse20189.01/files/hw4/*

3.b. 	
	grep -vc '^\s*$' main.c

4.a.
	awk -F, '{if( $1 >= $2 ) { print $1 } else { print $2 }}' numbers.txt

4.b.	
	ps -au | awk 'BEGIN { sum = 0 } sum = sum + $3; END{ print "Total CPU usage: " sum "%" }'

5.a.
	awk 'match($0,/DPT=[0-9]*[^ ] /) {print substr($0,RSTART,RLENGTH)}' messages | awk -F= 'BEGIN {dpt80 = 0; dpt22 =0} {if( $2 == 80 ){dpt80 = dpt80 + 1} else if( $2 == 22 ){dpt22 = dpt22 + 1}}; END {print "\n" dpt22 " connected to port 22\n" dpt80 " connected to port 80\n"}'

5.b.
	awk -f coefs.awk coefs.txt

	#!/bin/awk -f
	BEGIN {
      	FS = ":";               # a:b:c, so $1 = a, $2 = b, $3 = c
        x1 = 0;         # roots x1 and x2
        x2 = 0;
}
{
if( $2^2 - 4*$1*$3 >= 0 ){
        x1 = (-$2 + sqrt( $2^2 - 4*$1*$3 )) / ( 2*$1 );
        x2 = (-$2 - sqrt( $2^2 - 4*$1*$3 )) / ( 2*$1 );
        print "(" x1 ",0):(" x2 ",0)";
}
else{
        print "NaN:NaN";
}
}
